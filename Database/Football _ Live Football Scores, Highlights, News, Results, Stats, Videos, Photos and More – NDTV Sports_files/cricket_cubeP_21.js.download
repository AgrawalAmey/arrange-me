var dateFormat = function () { var t = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g, e = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g, a = /[^-+\dA-Z]/g, m = function (t, e) { for (t = String(t), e = e || 2; t.length < e;) t = "0" + t; return t }; return function (d, n, r) { var y = dateFormat; if (1 != arguments.length || "[object String]" != Object.prototype.toString.call(d) || /\d/.test(d) || (n = d, d = void 0), d = d ? new Date(d) : new Date, isNaN(d)) throw SyntaxError("invalid date"); n = String(y.masks[n] || n || y.masks["default"]), "UTC:" == n.slice(0, 4) && (n = n.slice(4), r = !0); var s = r ? "getUTC" : "get", i = d[s + "Date"](), o = d[s + "Day"](), u = d[s + "Month"](), M = d[s + "FullYear"](), l = d[s + "Hours"](), T = d[s + "Minutes"](), h = d[s + "Seconds"](), c = d[s + "Milliseconds"](), g = r ? 0 : d.getTimezoneOffset(), S = { d: i, dd: m(i), ddd: y.i18n.dayNames[o], dddd: y.i18n.dayNames[o + 7], m: u + 1, mm: m(u + 1), mmm: y.i18n.monthNames[u], mmmm: y.i18n.monthNames[u + 12], yy: String(M).slice(2), yyyy: M, h: l % 12 || 12, hh: m(l % 12 || 12), H: l, HH: m(l), M: T, MM: m(T), s: h, ss: m(h), l: m(c, 3), L: m(c > 99 ? Math.round(c / 10) : c), t: 12 > l ? "a" : "p", tt: 12 > l ? "am" : "pm", T: 12 > l ? "A" : "P", TT: 12 > l ? "AM" : "PM", Z: r ? "UTC" : (String(d).match(e) || [""]).pop().replace(a, ""), o: (g > 0 ? "-" : "+") + m(100 * Math.floor(Math.abs(g) / 60) + Math.abs(g) % 60, 4), S: ["th", "st", "nd", "rd"][i % 10 > 3 ? 0 : (i % 100 - i % 10 != 10) * i % 10] }; return n.replace(t, function (t) { return t in S ? S[t] : t.slice(1, t.length - 1) }) } }(); dateFormat.masks = { "default": "ddd mmm dd yyyy HH:MM:ss", shortDate: "m/d/yy", mediumDate: "mmm d, yyyy", longDate: "mmmm d, yyyy", fullDate: "dddd, mmmm d, yyyy", shortTime: "h:MM TT", mediumTime: "h:MM:ss TT", longTime: "h:MM:ss TT Z", isoDate: "yyyy-mm-dd", isoTime: "HH:MM:ss", isoDateTime: "yyyy-mm-dd'T'HH:MM:ss", isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'" }, dateFormat.i18n = { dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] }, Date.prototype.format = function (t, e) { return dateFormat(this, t, e) };

function loadCricket(matchId) {
    matches = [];
    var dataurl = 'https://sports.ndtv.com/multisportsapi/?methodtype=3&client=4&sport=1&league=0&timezone=0530&language=en&tournament=395';
    $.ajax({
        url: dataurl,
        dataType: 'jsonp',
        callback: 'cb',
        callbackParameter: 'callback',
        jsonpCallback: 'cb',
        success: function (data) {
            matches = $.grep(data.matches, function (n, i) {
                // return n.event_state == 'L';
                return n.game_id == matchId
            });
            if (matches) {
                if (matches[0].participants[0].now == "true") {
                    score = matches[0].participants[0].value.includes('&') ? $.trim(matches[0].participants[0].value.split('&')[1]).split(' ') : matches[0].participants[0].value.split(' ');
                }
                else {
                    score = matches[0].participants[1].value.includes("&") ? $.trim(matches[0].participants[1].value.split('&')[1]).split(' ') : matches[0].participants[1].value.split(' ');
                }

                var runs = score[0] + (score[1].includes("dec") ? "d" : "");
                var ovrs = score[1].includes("dec") ? score[2].replace('(', '').replace(')', '') : score[1].replace('(', '').replace(')', '');
                var scoreWid = runs + "<span>OVR " + ovrs + "</span>";

                var _event_sub_status;
                if (matches[0].participants[0].value != "" && matches[0].participants[1].value != "") {
                    _event_sub_status = matches[0].event_sub_status;
                }
                else if (parseFloat(ovrs) > 3 && matches[0].event_status.toLowerCase() == "match ended") {
                    _event_sub_status = matches[0].event_sub_status;
                }
                else if (matches[0].event_status.toLowerCase() == "match yet to begin") {
                    _event_sub_status = matches[0].event_sub_status;
                }
                else {
                    _event_sub_status = matches[0].event_status;
                }


                /*status*/
                var sessionStatus = "";
                if (matches[0].event_is_daynight == "false") {
                    if (matches[0].event_session == "1" && matches[0].event_status.toLowerCase() == "play in progress") {
                        sessionStatus = " Morning Session";
                    }
                    else if (matches[0].event_session == "2" && matches[0].event_status.toLowerCase() == "play in progress") {
                        sessionStatus = " Post Lunch Session";
                    }
                    else if (matches[0].event_session == "3" && matches[0].event_status.toLowerCase() == "play in progress") {
                        sessionStatus = " Post Tea Session";
                    }
                    else {
                        sessionStatus = "Day " + matches[0].event_day + ((matches[0].participants[0].value != "" && matches[0].participants[1].value != "") ? "," + matches[0].event_status : ""); //"<br />";
                    }
                }
                else {

                    if (matches[0].event_session == "1" && matches[0].event_status.toLowerCase() == "play in progress") {
                        sessionStatus = " Morning Session";
                    }
                    else if (matches[0].event_session == "2" && matches[0].event_status.toLowerCase() == "play in progress") {
                        sessionStatus = " Post Tea Session";
                    }
                    else if (matches[0].event_session == "3" && c.toLowerCase() == "play in progress") {
                        sessionStatus = " Post Dinner Session";
                    }
                    else {
                        sessionStatus = "Day " + matches[0].event_day + ((matches[0].participants[0].value != "" && matches[0].participants[1].value != "") ? ", " + matches[0].event_status : ""); //"<br />";
                    }

                }

                if (matches[0].event_format.toLowerCase() == "test") {
                    $('.mini_score h4').text(sessionStatus);
                }
                else {
                    var _event_name = matches[0].event_name;
                    $('.mini_score h4').text(_event_name);
                }

                if (matches[0].participants[0].now == "true") {
                    $('#activeTeam').html(matches[0].participants[0].short_name);
                    $('#nonActiveTeam').html(matches[0].participants[1].short_name);
                }
                else {
                    $('#activeTeam').html(matches[0].participants[1].short_name);
                    $('#nonActiveTeam').html(matches[0].participants[0].short_name);
                }

                $('.score_veiw').html(scoreWid);
                $('.score_report').html(_event_sub_status.replace(matches[0].participants[0].name, matches[0].participants[0].short_name).replace(matches[0].participants[1].name, matches[0].participants[1].short_name));

            }
        },
        error: function (xhr, status, error) {
            //console.log(status + '; ' + error);
        }
    });

}

function loadCricketPlyers(matchId) {
    var batsman_involved = ''; var bowler_involved = '';
    var dataurl = 'https://sports.ndtv.com/multisportsapi/?methodtype=3&client=4&sport=1&league=0&timezone=0530&language=en&tournament=395';
    $.ajax({
        url: dataurl,
        dataType: 'jsonp',
        callback: 'cb',
        callbackParameter: 'callback',
        jsonpCallback: 'cb',
        success: function (data) {
            matches = $.grep(data.matches, function (n, i) {
                // return n.event_state == 'L';
                return n.game_id == matchId
            });
            if (matches) {
                if (matches[0].participants[0].now == "true") {

                    matches[0].participants[0].players_involved.forEach(function (v, i) {
                        var plyName = v.name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = v.value.split(' ');
                        batsman_involved += "<tr><td width=\"55%\">" + plyName + (v.name.includes("*") ? "*" : "") + "</td><td style=\"text-align: right;\" width=\"22%\">" + score[0] + "</td><td style=\"text-align: right;\" width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";

                    });

                    matches[0].participants[1].players_involved.forEach(function (v, i) {

                        if (v.name.includes('*')) {
                            var plyName = v.name;
                            var plyNm = plyName.split(' ');
                            var _count = 0;
                            plyName = "";
                            plyNm.forEach(function (val, i) {
                                if (!val.includes('*')) {
                                    if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                    }
                                    else {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                    }
                                }
                                _count++;
                            });

                            var score = v.value.split(' ');
                            bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";


                        }
                    });

                    if (bowler_involved == "") {
                        var plyName = matches[0].participants[1].players_involved[0].name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = matches[0].participants[1].players_involved[0].value.split(' ');
                        bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";
                    }

                }
                else {

                    matches[0].participants[1].players_involved.forEach(function (v, i) {
                        var plyName = v.name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = v.value.split(' ');
                        batsman_involved += "<tr><td width=\"55%\">" + plyName + (v.name.includes("*") ? "*" : "") + "</td><td style=\"text-align: right;\" width=\"22%\">" + score[0] + "</td><td style=\"text-align: right;\" width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";

                    });

                    matches[0].participants[0].players_involved.forEach(function (v, i) {

                        if (v.name.includes('*')) {
                            var plyName = v.name;
                            var plyNm = plyName.split(' ');
                            var _count = 0;
                            plyName = "";
                            plyNm.forEach(function (val, i) {
                                if (!val.includes('*')) {
                                    if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                    }
                                    else {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                    }
                                }
                                _count++;
                            });

                            var score = v.value.split(' ');
                            bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";


                        }
                    });

                    if (bowler_involved == "") {
                        var plyName = matches[0].participants[0].players_involved[0].name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = matches[0].participants[0].players_involved[0].value.split(' ');
                        bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";
                    }

                }
                $('#tblBatsman tr').has('td').remove();
                $('#tblBowler tr').has('td').remove();
                $('#tblBatsman').append(batsman_involved);
                $('#tblBowler').append(bowler_involved);
            }
        },
        error: function (xhr, status, error) {
            //console.log(status + '; ' + error);
        }
    });

}

function loadCricketPlyersWithUpcoming(matchId) {
    var batsman_involved = ''; var bowler_involved = '';
    var dataurl = 'https://sports.ndtv.com/multisportsapi/?methodtype=3&client=4&sport=1&league=0&timezone=0530&language=en&tournament=395';
    //var dataurl = '/Scripts/cubePhase3.json';
    $.ajax({
        url: dataurl,
        //dataType: "json",
        dataType: 'jsonp',
        callback: 'cb',
        callbackParameter: 'callback',
        jsonpCallback: 'cb',
        success: function (data) {
            matches = $.grep(data.matches, function (n, i) {
                // return n.event_state == 'L';
                return n.game_id == matchId
            });
            if (matches && matches[0].event_status != 'Match Ended' && matches[0].participants[0].players_involved.length > 0 && matches[0].participants[1].players_involved.length > 0) {
                if (matches[0].participants[0].now == "true") {

                    matches[0].participants[0].players_involved.forEach(function (v, i) {
                        var plyName = v.name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = v.value.split(' ');
                        batsman_involved += "<tr><td width=\"55%\">" + plyName + (v.name.includes("*") ? "*" : "") + "</td><td style=\"text-align: right;\" width=\"22%\">" + score[0] + "</td><td style=\"text-align: right;\" width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";

                    });

                    matches[0].participants[1].players_involved.forEach(function (v, i) {

                        if (v.name.includes('*')) {
                            var plyName = v.name;
                            var plyNm = plyName.split(' ');
                            var _count = 0;
                            plyName = "";
                            plyNm.forEach(function (val, i) {
                                if (!val.includes('*')) {
                                    if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                    }
                                    else {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                    }
                                }
                                _count++;
                            });

                            var score = v.value.split(' ');
                            bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";


                        }
                    });

                    if (bowler_involved == "") {
                        var plyName = matches[0].participants[1].players_involved[0].name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = matches[0].participants[1].players_involved[0].value.split(' ');
                        bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";
                    }

                }
                else {

                    matches[0].participants[1].players_involved.forEach(function (v, i) {
                        var plyName = v.name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = v.value.split(' ');
                        batsman_involved += "<tr><td width=\"55%\">" + plyName + (v.name.includes("*") ? "*" : "") + "</td><td style=\"text-align: right;\" width=\"22%\">" + score[0] + "</td><td style=\"text-align: right;\" width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";

                    });

                    matches[0].participants[0].players_involved.forEach(function (v, i) {

                        if (v.name.includes('*')) {
                            var plyName = v.name;
                            var plyNm = plyName.split(' ');
                            var _count = 0;
                            plyName = "";
                            plyNm.forEach(function (val, i) {
                                if (!val.includes('*')) {
                                    if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                    }
                                    else {
                                        plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                    }
                                }
                                _count++;
                            });

                            var score = v.value.split(' ');
                            bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";


                        }
                    });

                    if (bowler_involved == "") {
                        var plyName = matches[0].participants[0].players_involved[0].name;
                        var plyNm = plyName.split(' ');
                        var _count = 0;
                        plyName = "";
                        plyNm.forEach(function (val, i) {
                            if (!val.includes('*')) {
                                if (_count < plyNm.length - (val.includes('*') ? 2 : 1)) {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 9 ? val.substring(0, 1).toUpperCase() : val);
                                }
                                else {
                                    plyName += (plyName == "" ? "" : " ") + (val.length > 6 ? val.substring(0, 5) + ".." : val);
                                }
                            }
                            _count++;
                        });

                        var score = matches[0].participants[0].players_involved[0].value.split(' ');
                        bowler_involved += "<tr><td width=\"55%\">" + plyName + "</td><td width=\"23%\">" + score[0] + "</td><td width=\"23%\">" + score[1].replace("(", "").replace(")", "") + "</td></tr>";
                    }

                }
                $('#tblBatsman tr').has('td').remove();
                $('#tblBowler tr').has('td').remove();
                $('#tblBatsman').append(batsman_involved);
                $('#tblBowler').append(bowler_involved);
            }
            else if (matches[0].event_status == 'Match Ended'){
                matches = $.grep(data.matches, function (n, i) {
                    return n.event_state == 'U';
                    //return n.game_id == matchId
                });
                var _ActiveShortTeamName = "", _NonActiveShortTeamName = "";
                try {
                    if (matches[0].participants[0].now != null && matches[0].participants[0].now == "true") {
                        _ActiveShortTeamName = matches[0].participants[0].short_name;
                        _NonActiveShortTeamName = matches[0].participants[1].short_name;
                    }
                    else {
                        _ActiveShortTeamName = matches[0].participants[1].short_name;
                        _NonActiveShortTeamName = matches[0].participants[0].short_name;
                    }
                }
                catch (e) { }

                var arrVenue = (matches[0].venue_name).split(',');
                var _event_sub_status = matches[0].event_sub_status;
                _event_sub_status = _event_sub_status.replace(matches[0].participants[0].name, matches[0].participants[0].short_name).replace(matches[0].participants[1].name, matches[0].participants[1].short_name);
                var strUpcoming = '';
                var dtMatch = new Date(Date.parse(matches[0].start_date));
                strUpcoming += "<div class=\"score_tab\"> <a id='activeTeam' href=\"#;\" class=\"active\">" + _ActiveShortTeamName + "</a><span>vs</span><a id='nonActiveTeam'  href=\"#;\" >" + _NonActiveShortTeamName + "</a> </div>";
                strUpcoming += "<div class=\"score_veiw\"> " + dateFormat(dtMatch, "mmm, dd yyyy") + "<span>" + dateFormat(dtMatch, "HH:MM") + " (IST)</span> </div>";
                strUpcoming += "<div class=\"score_report\">" + (_event_sub_status != "" ? _event_sub_status : arrVenue[1]) + "</div>";
                strUpcoming += "</div>";
                $('.mini_score').html(strUpcoming);
            }
        },
        error: function (xhr, status, error) {
            //console.log(status + '; ' + error);
        }
    });

}


